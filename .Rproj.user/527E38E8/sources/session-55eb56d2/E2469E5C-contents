---
title: "Ch 2: Time series graphics"
output:
  github_document:
    toc: true
  html_document:
    toc: true
    df_print: paged
---

# 2.1 `tsibble` objects

```{r}
library(fpp3)
```

## The index variable

```{r}
library(tsibble)
y <- tsibble(
  Year = 2015:2019,
  Observation = c(123, 39, 78, 52, 110),
  index = Year
)
y
```

`tsibble` introduces temporal structure to tidy data frames.

A regular `tibble` can be converted to a `tsibble` object

```{r}
z <- tibble(
  Month = c("2019 Jan", "2019 Feb", "2019 Mar", "2019 Apr", "2019 May"),
  Observation = c(50, 23, 34, 30, 25)
)
z
```

```{r}
z |>
  mutate(Month = yearmonth(Month)) |>
  as_tsibble(index = Month)
```

`mutate()` converts the "Month" column to the appropriate variable type, in this case `yearmonth`. `as_tsibble()` sets the index for the `tsibble` object

| Frequency | Function |
|--------|-----------------|
| Annual | start:end |
| Quarterly | `yearquarter()` |
| Monthly | `yearmonth()` |
| Weekly | `yearweek()` |
| Daily | `as_date()`, `ymd()` |
| Sub-Daily | `as_datetime()`, `ymd_hms()` |

## The key variables

```{r}
olympic_running
```

The summary shows that the `tsibble` object has 312 rows, 4 columns, and the index is in 4 year intervals. Additionally there are 14 seperate time series uniquely identified by the keys `Length` and `Sex`. `distinct()` can be used to show categories and combinations of each variable.

```{r}
olympic_running |> distinct(Sex)
```

```{r}
olympic_running |> distinct(Length)
```
## Working with `tsibble` objects

`dplyr` functions include mutate()`, `filter()`, `select()`, `summarise()`

```{r}
PBS
```

This data set contains monthly data on Medicare Australia prescription data from July 1991 to June 2008.

### `select()`

```{r}
PBS |>
  filter(ATC2 == "A10")
```

### `filter()`

```{r}
PBS |>
  filter(ATC2 == "A10") |>
  select(Month, Concession, Type, Cost)
```

Note that `Month`, `Concession` and `Type` would be returned automatically to ensure that each row contains a unique combination of index and keys.

### `summarise()`

```{r}
PBS |>
  filter(ATC2 == "A10") |>
  select(Month, Concession, Type, Cost) |>
  summarise(TotalC = sum(Cost))
```

### `mutate()`

Used to create new variables

```{r}
PBS |>
  filter(ATC2 == "A10") |>
  select(Month, Concession, Type, Cost) |>
  summarise(TotalC = sum(Cost)) |>
  mutate(Cost = TotalC/1e6) # Convert from dollars to millions of dollars
```

Save the `tsibble` object

```{r}
PBS |>
  filter(ATC2 == "A10") |>
  select(Month, Concession, Type, Cost) |>
  summarise(TotalC = sum(Cost)) |>
  mutate(Cost = TotalC/1e6) -> a10
```








