Ch 2: Time series graphics
================

- <a href="#21-tsibble-objects" id="toc-21-tsibble-objects">2.1
  <code>tsibble</code> objects</a>
  - <a href="#the-index-variable" id="toc-the-index-variable">The index
    variable</a>
  - <a href="#the-key-variables" id="toc-the-key-variables">The key
    variables</a>
  - <a href="#working-with-tsibble-objects"
    id="toc-working-with-tsibble-objects">Working with <code>tsibble</code>
    objects</a>
    - <a href="#select" id="toc-select"><code>select()</code></a>
    - <a href="#filter" id="toc-filter"><code>filter()</code></a>
    - <a href="#summarise" id="toc-summarise"><code>summarise()</code></a>
    - <a href="#mutate" id="toc-mutate"><code>mutate()</code></a>

# 2.1 `tsibble` objects

``` r
library(fpp3)
```

    ## ── Attaching packages ────────────────────────────────────────────── fpp3 0.5 ──

    ## ✔ tibble      3.1.8     ✔ tsibble     1.1.3
    ## ✔ dplyr       1.1.0     ✔ tsibbledata 0.4.1
    ## ✔ tidyr       1.3.0     ✔ feasts      0.3.0
    ## ✔ lubridate   1.9.2     ✔ fable       0.3.2
    ## ✔ ggplot2     3.4.1     ✔ fabletools  0.3.2

    ## ── Conflicts ───────────────────────────────────────────────── fpp3_conflicts ──
    ## ✖ lubridate::date()    masks base::date()
    ## ✖ dplyr::filter()      masks stats::filter()
    ## ✖ tsibble::intersect() masks base::intersect()
    ## ✖ tsibble::interval()  masks lubridate::interval()
    ## ✖ dplyr::lag()         masks stats::lag()
    ## ✖ tsibble::setdiff()   masks base::setdiff()
    ## ✖ tsibble::union()     masks base::union()

## The index variable

``` r
library(tsibble)
y <- tsibble(
  Year = 2015:2019,
  Observation = c(123, 39, 78, 52, 110),
  index = Year
)
y
```

    ## # A tsibble: 5 x 2 [1Y]
    ##    Year Observation
    ##   <int>       <dbl>
    ## 1  2015         123
    ## 2  2016          39
    ## 3  2017          78
    ## 4  2018          52
    ## 5  2019         110

`tsibble` introduces temporal structure to tidy data frames.

A regular `tibble` can be converted to a `tsibble` object

``` r
z <- tibble(
  Month = c("2019 Jan", "2019 Feb", "2019 Mar", "2019 Apr", "2019 May"),
  Observation = c(50, 23, 34, 30, 25)
)
z
```

    ## # A tibble: 5 × 2
    ##   Month    Observation
    ##   <chr>          <dbl>
    ## 1 2019 Jan          50
    ## 2 2019 Feb          23
    ## 3 2019 Mar          34
    ## 4 2019 Apr          30
    ## 5 2019 May          25

``` r
z |>
  mutate(Month = yearmonth(Month)) |>
  as_tsibble(index = Month)
```

    ## # A tsibble: 5 x 2 [1M]
    ##      Month Observation
    ##      <mth>       <dbl>
    ## 1 2019 Jan          50
    ## 2 2019 Feb          23
    ## 3 2019 Mar          34
    ## 4 2019 Apr          30
    ## 5 2019 May          25

`mutate()` converts the “Month” column to the appropriate variable type,
in this case `yearmonth`. `as_tsibble()` sets the index for the
`tsibble` object

| Frequency | Function                     |
|-----------|------------------------------|
| Annual    | start:end                    |
| Quarterly | `yearquarter()`              |
| Monthly   | `yearmonth()`                |
| Weekly    | `yearweek()`                 |
| Daily     | `as_date()`, `ymd()`         |
| Sub-Daily | `as_datetime()`, `ymd_hms()` |

## The key variables

``` r
olympic_running
```

    ## # A tsibble: 312 x 4 [4Y]
    ## # Key:       Length, Sex [14]
    ##     Year Length Sex    Time
    ##    <int>  <int> <chr> <dbl>
    ##  1  1896    100 men    12  
    ##  2  1900    100 men    11  
    ##  3  1904    100 men    11  
    ##  4  1908    100 men    10.8
    ##  5  1912    100 men    10.8
    ##  6  1916    100 men    NA  
    ##  7  1920    100 men    10.8
    ##  8  1924    100 men    10.6
    ##  9  1928    100 men    10.8
    ## 10  1932    100 men    10.3
    ## # … with 302 more rows

The summary shows that the `tsibble` object has 312 rows, 4 columns, and
the index is in 4 year intervals. Additionally there are 14 seperate
time series uniquely identified by the keys `Length` and `Sex`.
`distinct()` can be used to show categories and combinations of each
variable.

``` r
olympic_running |> distinct(Sex)
```

    ## # A tibble: 2 × 1
    ##   Sex  
    ##   <chr>
    ## 1 men  
    ## 2 women

``` r
olympic_running |> distinct(Length)
```

    ## # A tibble: 7 × 1
    ##   Length
    ##    <int>
    ## 1    100
    ## 2    200
    ## 3    400
    ## 4    800
    ## 5   1500
    ## 6   5000
    ## 7  10000

## Working with `tsibble` objects

`dplyr` functions include mutate()`,`filter()`,`select()`,`summarise()\`

``` r
PBS
```

    ## # A tsibble: 67,596 x 9 [1M]
    ## # Key:       Concession, Type, ATC1, ATC2 [336]
    ##       Month Concession   Type        ATC1  ATC1_desc ATC2  ATC2_…¹ Scripts  Cost
    ##       <mth> <chr>        <chr>       <chr> <chr>     <chr> <chr>     <dbl> <dbl>
    ##  1 1991 Jul Concessional Co-payments A     Alimenta… A01   STOMAT…   18228 67877
    ##  2 1991 Aug Concessional Co-payments A     Alimenta… A01   STOMAT…   15327 57011
    ##  3 1991 Sep Concessional Co-payments A     Alimenta… A01   STOMAT…   14775 55020
    ##  4 1991 Oct Concessional Co-payments A     Alimenta… A01   STOMAT…   15380 57222
    ##  5 1991 Nov Concessional Co-payments A     Alimenta… A01   STOMAT…   14371 52120
    ##  6 1991 Dec Concessional Co-payments A     Alimenta… A01   STOMAT…   15028 54299
    ##  7 1992 Jan Concessional Co-payments A     Alimenta… A01   STOMAT…   11040 39753
    ##  8 1992 Feb Concessional Co-payments A     Alimenta… A01   STOMAT…   15165 54405
    ##  9 1992 Mar Concessional Co-payments A     Alimenta… A01   STOMAT…   16898 61108
    ## 10 1992 Apr Concessional Co-payments A     Alimenta… A01   STOMAT…   18141 65356
    ## # … with 67,586 more rows, and abbreviated variable name ¹​ATC2_desc

This data set contains monthly data on Medicare Australia prescription
data from July 1991 to June 2008.

### `select()`

``` r
PBS |>
  filter(ATC2 == "A10")
```

    ## # A tsibble: 816 x 9 [1M]
    ## # Key:       Concession, Type, ATC1, ATC2 [4]
    ##       Month Concession   Type        ATC1  ATC1_d…¹ ATC2  ATC2_…² Scripts   Cost
    ##       <mth> <chr>        <chr>       <chr> <chr>    <chr> <chr>     <dbl>  <dbl>
    ##  1 1991 Jul Concessional Co-payments A     Aliment… A10   ANTIDI…   89733 2.09e6
    ##  2 1991 Aug Concessional Co-payments A     Aliment… A10   ANTIDI…   77101 1.80e6
    ##  3 1991 Sep Concessional Co-payments A     Aliment… A10   ANTIDI…   76255 1.78e6
    ##  4 1991 Oct Concessional Co-payments A     Aliment… A10   ANTIDI…   78681 1.85e6
    ##  5 1991 Nov Concessional Co-payments A     Aliment… A10   ANTIDI…   70554 1.69e6
    ##  6 1991 Dec Concessional Co-payments A     Aliment… A10   ANTIDI…   75814 1.84e6
    ##  7 1992 Jan Concessional Co-payments A     Aliment… A10   ANTIDI…   64186 1.56e6
    ##  8 1992 Feb Concessional Co-payments A     Aliment… A10   ANTIDI…   75899 1.73e6
    ##  9 1992 Mar Concessional Co-payments A     Aliment… A10   ANTIDI…   89445 2.05e6
    ## 10 1992 Apr Concessional Co-payments A     Aliment… A10   ANTIDI…   97315 2.23e6
    ## # … with 806 more rows, and abbreviated variable names ¹​ATC1_desc, ²​ATC2_desc

### `filter()`

``` r
PBS |>
  filter(ATC2 == "A10") |>
  select(Month, Concession, Type, Cost)
```

    ## # A tsibble: 816 x 4 [1M]
    ## # Key:       Concession, Type [4]
    ##       Month Concession   Type           Cost
    ##       <mth> <chr>        <chr>         <dbl>
    ##  1 1991 Jul Concessional Co-payments 2092878
    ##  2 1991 Aug Concessional Co-payments 1795733
    ##  3 1991 Sep Concessional Co-payments 1777231
    ##  4 1991 Oct Concessional Co-payments 1848507
    ##  5 1991 Nov Concessional Co-payments 1686458
    ##  6 1991 Dec Concessional Co-payments 1843079
    ##  7 1992 Jan Concessional Co-payments 1564702
    ##  8 1992 Feb Concessional Co-payments 1732508
    ##  9 1992 Mar Concessional Co-payments 2046102
    ## 10 1992 Apr Concessional Co-payments 2225977
    ## # … with 806 more rows

Note that `Month`, `Concession` and `Type` would be returned
automatically to ensure that each row contains a unique combination of
index and keys.

### `summarise()`

``` r
PBS |>
  filter(ATC2 == "A10") |>
  select(Month, Concession, Type, Cost) |>
  summarise(TotalC = sum(Cost))
```

    ## # A tsibble: 204 x 2 [1M]
    ##       Month  TotalC
    ##       <mth>   <dbl>
    ##  1 1991 Jul 3526591
    ##  2 1991 Aug 3180891
    ##  3 1991 Sep 3252221
    ##  4 1991 Oct 3611003
    ##  5 1991 Nov 3565869
    ##  6 1991 Dec 4306371
    ##  7 1992 Jan 5088335
    ##  8 1992 Feb 2814520
    ##  9 1992 Mar 2985811
    ## 10 1992 Apr 3204780
    ## # … with 194 more rows

### `mutate()`

Used to create new variables

``` r
PBS |>
  filter(ATC2 == "A10") |>
  select(Month, Concession, Type, Cost) |>
  summarise(TotalC = sum(Cost)) |>
  mutate(Cost = TotalC/1e6) # Convert from dollars to millions of dollars
```

    ## # A tsibble: 204 x 3 [1M]
    ##       Month  TotalC  Cost
    ##       <mth>   <dbl> <dbl>
    ##  1 1991 Jul 3526591  3.53
    ##  2 1991 Aug 3180891  3.18
    ##  3 1991 Sep 3252221  3.25
    ##  4 1991 Oct 3611003  3.61
    ##  5 1991 Nov 3565869  3.57
    ##  6 1991 Dec 4306371  4.31
    ##  7 1992 Jan 5088335  5.09
    ##  8 1992 Feb 2814520  2.81
    ##  9 1992 Mar 2985811  2.99
    ## 10 1992 Apr 3204780  3.20
    ## # … with 194 more rows

Save the `tsibble` object

``` r
PBS |>
  filter(ATC2 == "A10") |>
  select(Month, Concession, Type, Cost) |>
  summarise(TotalC = sum(Cost)) |>
  mutate(Cost = TotalC/1e6) -> a10
```
